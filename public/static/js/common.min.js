/**
 * Created by imdante on 2016/9/15.
 */
$.AMUI.progress.start();
$(document).ready(function () {

    //设置表单提交禁用状态
    $(':submit').on('click', function () {
        $(this).prepend('<i class="am-icon-spinner am-icon-pulse"></i>').addClass('am-disabled');
        setTimeout('reSubmitState()', 5000);
    });
    //ajax提交表单
    $(document).on('click', '[data-ajax-submit]', function () {
        $(this).prepend('<i class="am-icon-spinner am-icon-pulse"></i>').addClass('am-disabled');
        var elm = $(this).data('ajax-submit');
        var $form = $(elm);
        var type = $(this).data('verify-type');
        if(type == 'drag'){
            var verifyStatus = $('.drag_text').text();
            if(verifyStatus != '验证通过'){
                showAlert('403','请滑动验证');
                setTimeout('reSubmitState()', 5000);
                return false;
            }
        }
        if ($form['0'].checkValidity()) {
            var data = $form.serialize();
            var url = $form.attr('action');
            pform(url, data);
        } else {
            showAlert(403, '请填写必填字段');
        }
        setTimeout('reSubmitState()', 5000);
        return false;
    });
    // end ajax
    //删除设置
    $(document).on('click', '[data-del]', function () {
        var json = $(this).data('del');
        var obj = json_to_obj(json);
        var confirmButton = $('#' + obj.target);
        confirmButton.find('[data-am-modal-confirm]').attr('data-del-confirm', json);
        showModel(obj.target);
    });

    $(document).on('click', '[data-del-confirm]', function () {
        var json = $(this).data('del-confirm');
        var obj = json_to_obj(json);
        gform(obj.url, {id: obj.id}, function (res) {
            showAlert(res.code, res.msg, res.code);
        })
    });
    // end delete

    $(document).on('click', '[data-pid]', function () {
        var json = $(this).data('pid');
        var obj = json_to_obj(json);
        $('#' + obj.target).find('[name="pid"]').attr('value', obj.id);
        showModel(obj.target);
    });
    $(document).on('click', '.am-spm a,a.am-spm', function () {
        window.location.href = $(this).attr('href') + '?spm=' + spm;
        return false;
    })
    $.AMUI.progress.done();
});

//重置表单状态
function reSubmitState() {
    $(':submit,[data-ajax-submit]').removeClass('am-disabled').find('i').remove();
}

/**
 * json转object对象
 * @param json
 * @returns {Object}
 */
function json_to_obj(json) {
    return eval('(' + json + ')');
}

/**
 * 刷新验证码
 */
function refreshVerify() {
    //重载验证码
    var time = new Date().getTime();
    document.getElementById('verifyImg').src = '/common/helper/verify?time=' + time;
}


/**
 *清空缓存
 */
function clear_cache_log_temp() {
    gform('/common/helper/clear_cache_log_temp');
}
/**
 * post提交数据
 * @param url
 * @param data
 */
function pform(url, data) {
    $.post(url, data, function (json) {
        showAlert(json.code, json.msg, json.code, json.url);
    })
}
/**
 * get 方式提交数据
 * @param url
 * @param data
 */
function gform(url, data) {
    $.get(url, data, function (callback) {
        showAlert(callback.code, callback.msg, callback.code);
    })
}

function submitForm(e, form) {

}
/**
 * 提示框
 * @param code
 * @param msg
 * @param refresh
 */
function showAlert(code, msg, refresh, url) {
    var alert_success = $('.am-alert-success');
    var alert_error = $('.am-alert-danger');
    var alert_warning = $('.am-alert-warning');
    var alert_marks = $('.am-alert-marks');
    var alert;
    switch (code) {
        case 200:
            alert = alert_success;
            break;
        case 403 || 404:
            alert = alert_warning;
            break;
        default:
            alert = alert_error;
            break;
    }
    alert.find('p').html(msg);
    alert.fadeIn().delay(3000).fadeOut();
    alert_marks.fadeIn().delay(500).fadeOut();
    //console.log(url);

    if (url) {
        setTimeout("tourl(\'" + url + "\')", 1000);
    }
    if (refresh == 200) {
        setTimeout("window.location.reload()", 1000);
    }
}
/**
 * 打开模态窗口
 * @param name
 * @param w
 */
function showModel(name, w) {
    $('#' + name).modal({width: w}, 'open');
}
/**
 * 转跳到url
 * @param url
 */
function tourl(url) {
    window.location.href = url;
}
(function($){
    $.fn.drag = function(options){
        var x, drag = this, isMove = false, defaults = {
        };
        var options = $.extend(defaults, options);
        //添加背景，文字，滑块
        var html = '<div class="drag_bg"></div>'+
            '<div class="drag_text" onselectstart="return false;" unselectable="on">拖动滑块验证</div>'+
            '<div class="handler handler_bg"></div>';
        this.append(html);

        var handler = drag.find('.handler');
        var drag_bg = drag.find('.drag_bg');
        var text = drag.find('.drag_text');
        var maxWidth = drag.width() - handler.width();  //能滑动的最大间距

        //鼠标按下时候的x轴的位置
        handler.mousedown(function(e){
            isMove = true;
            x = e.pageX - parseInt(handler.css('left'), 10);
        });

        //鼠标指针在上下文移动时，移动距离大于0小于最大间距，滑块x轴位置等于鼠标移动距离
        $(document).mousemove(function(e){
            var _x = e.pageX - x;
            if(isMove){
                if(_x > 0 && _x <= maxWidth){
                    handler.css({'left': _x});
                    drag_bg.css({'width': _x});
                }else if(_x > maxWidth){  //鼠标指针移动距离达到最大时清空事件
                    dragOk();
                }
            }
        }).mouseup(function(e){
            isMove = false;
            var _x = e.pageX - x;
            if(_x < maxWidth){ //鼠标松开时，如果没有达到最大距离位置，滑块就返回初始位置
                handler.css({'left': 0});
                drag_bg.css({'width': 0});
            }
        });

        //清空事件
        function dragOk(){
            handler.removeClass('handler_bg').addClass('handler_ok_bg');
            text.text('验证通过');
            drag.css({'color': '#fff'});
            handler.unbind('mousedown');
            $(document).unbind('mousemove');
            $(document).unbind('mouseup');
        }
    };
})(jQuery);

function cache(k,v){
    if(v){
        window.localStorage.setItem(k,v);
    }else {
        var r = window.localStorage.getItem(k);
        return r;
    }
}